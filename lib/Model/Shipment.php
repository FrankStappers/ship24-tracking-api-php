<?php
/**
 * Shipment
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Ship24\TrackingApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ship24 Tracking API
 *
 * ## Getting started  Make sure to read the [Getting started](https://docs.ship24.com/getting-started) section of our [API Documentation](https://docs.ship24.com/) before using the endpoints presented below. ## Documentation structure  Use the top navigation bar to switch from:  - Our [API Documentation](https://docs.ship24.com/), which contains a comprehensive explanation of how our API works. - Our [API Reference](https://docs.ship24.com/tracking-api-reference/), which contains the specification of each of our endpoints. - Our [Support](https://docs.ship24.com/support/introduction) section, which contains help articles for most of the common questions and issues you may encounter.  ## Import our documentation into your HTTP client  Our API Reference is available as an Open API 3.1 format file, which is supported by most HTTP clients.  - Latest version: https://docs.ship24.com/assets/openapi/ship24-tracking-api.yaml  | <!-- -->                                                     | <!-- -->                                                                                                                                                     | | ------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------ | | ![Postman](/img/postman-logo.svg) Postman                    | In Postman, click on \"Import\", go on the \"Link\" tab, and paste this URL `https://docs.ship24.com/assets/openapi/ship24-tracking-api.yaml`                           | | <img src=\"/img/insomnia-logo.png\" width=\"32\"></img> Insomnia | From Insomnia preferences, locate the \"Import data\" option, choose \"From URL\", and paste this URL `https://docs.ship24.com/assets/openapi/ship24-tracking-api.yaml` |
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Ship24\TrackingApi\Model;

use \ArrayAccess;
use \Ship24\TrackingApi\ObjectSerializer;

/**
 * Shipment Class Doc Comment
 *
 * @category Class
 * @package  Ship24\TrackingApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class Shipment implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'shipment';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'shipment_id' => 'string',
        'status_code' => 'string',
        'status_category' => 'string',
        'status_milestone' => 'string',
        'origin_country_code' => 'string',
        'destination_country_code' => 'string',
        'delivery' => '\Ship24\TrackingApi\Model\ShipmentDelivery',
        'tracking_numbers' => '\Ship24\TrackingApi\Model\ShipmentTrackingNumbersInner[]',
        'recipient' => '\Ship24\TrackingApi\Model\ShipmentRecipient'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'shipment_id' => null,
        'status_code' => null,
        'status_category' => null,
        'status_milestone' => null,
        'origin_country_code' => null,
        'destination_country_code' => null,
        'delivery' => null,
        'tracking_numbers' => null,
        'recipient' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'shipment_id' => true,
        'status_code' => true,
        'status_category' => true,
        'status_milestone' => false,
        'origin_country_code' => true,
        'destination_country_code' => true,
        'delivery' => false,
        'tracking_numbers' => false,
        'recipient' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'shipment_id' => 'shipmentId',
        'status_code' => 'statusCode',
        'status_category' => 'statusCategory',
        'status_milestone' => 'statusMilestone',
        'origin_country_code' => 'originCountryCode',
        'destination_country_code' => 'destinationCountryCode',
        'delivery' => 'delivery',
        'tracking_numbers' => 'trackingNumbers',
        'recipient' => 'recipient'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'shipment_id' => 'setShipmentId',
        'status_code' => 'setStatusCode',
        'status_category' => 'setStatusCategory',
        'status_milestone' => 'setStatusMilestone',
        'origin_country_code' => 'setOriginCountryCode',
        'destination_country_code' => 'setDestinationCountryCode',
        'delivery' => 'setDelivery',
        'tracking_numbers' => 'setTrackingNumbers',
        'recipient' => 'setRecipient'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'shipment_id' => 'getShipmentId',
        'status_code' => 'getStatusCode',
        'status_category' => 'getStatusCategory',
        'status_milestone' => 'getStatusMilestone',
        'origin_country_code' => 'getOriginCountryCode',
        'destination_country_code' => 'getDestinationCountryCode',
        'delivery' => 'getDelivery',
        'tracking_numbers' => 'getTrackingNumbers',
        'recipient' => 'getRecipient'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('shipment_id', $data ?? [], null);
        $this->setIfExists('status_code', $data ?? [], null);
        $this->setIfExists('status_category', $data ?? [], null);
        $this->setIfExists('status_milestone', $data ?? [], null);
        $this->setIfExists('origin_country_code', $data ?? [], null);
        $this->setIfExists('destination_country_code', $data ?? [], null);
        $this->setIfExists('delivery', $data ?? [], null);
        $this->setIfExists('tracking_numbers', $data ?? [], null);
        $this->setIfExists('recipient', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets shipment_id
     *
     * @return string|null
     */
    public function getShipmentId()
    {
        return $this->container['shipment_id'];
    }

    /**
     * Sets shipment_id
     *
     * @param string|null $shipment_id Unique identifier of the parcel in Ship24 system.
     *
     * @return self
     */
    public function setShipmentId($shipment_id)
    {
        if (is_null($shipment_id)) {
            array_push($this->openAPINullablesSetToNull, 'shipment_id');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('shipment_id', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['shipment_id'] = $shipment_id;

        return $this;
    }

    /**
     * Gets status_code
     *
     * @return string|null
     */
    public function getStatusCode()
    {
        return $this->container['status_code'];
    }

    /**
     * Sets status_code
     *
     * @param string|null $status_code [statusCode](https://docs.ship24.com/status/#statuscode-and-statuscategory) of the shipment.
     *
     * @return self
     */
    public function setStatusCode($status_code)
    {
        if (is_null($status_code)) {
            array_push($this->openAPINullablesSetToNull, 'status_code');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('status_code', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['status_code'] = $status_code;

        return $this;
    }

    /**
     * Gets status_category
     *
     * @return string|null
     */
    public function getStatusCategory()
    {
        return $this->container['status_category'];
    }

    /**
     * Sets status_category
     *
     * @param string|null $status_category [statusCategory](https://docs.ship24.com/status/#statuscode-and-statuscategory) of the shipment.
     *
     * @return self
     */
    public function setStatusCategory($status_category)
    {
        if (is_null($status_category)) {
            array_push($this->openAPINullablesSetToNull, 'status_category');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('status_category', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['status_category'] = $status_category;

        return $this;
    }

    /**
     * Gets status_milestone
     *
     * @return string|null
     */
    public function getStatusMilestone()
    {
        return $this->container['status_milestone'];
    }

    /**
     * Sets status_milestone
     *
     * @param string|null $status_milestone [statusMilestone](https:docs.ship24.com/status/#statusmilestone) of the shipment.
     *
     * @return self
     */
    public function setStatusMilestone($status_milestone)
    {
        if (is_null($status_milestone)) {
            throw new \InvalidArgumentException('non-nullable status_milestone cannot be null');
        }
        $this->container['status_milestone'] = $status_milestone;

        return $this;
    }

    /**
     * Gets origin_country_code
     *
     * @return string|null
     */
    public function getOriginCountryCode()
    {
        return $this->container['origin_country_code'];
    }

    /**
     * Sets origin_country_code
     *
     * @param string|null $origin_country_code Detected country code of origin.
     *
     * @return self
     */
    public function setOriginCountryCode($origin_country_code)
    {
        if (is_null($origin_country_code)) {
            array_push($this->openAPINullablesSetToNull, 'origin_country_code');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('origin_country_code', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['origin_country_code'] = $origin_country_code;

        return $this;
    }

    /**
     * Gets destination_country_code
     *
     * @return string|null
     */
    public function getDestinationCountryCode()
    {
        return $this->container['destination_country_code'];
    }

    /**
     * Sets destination_country_code
     *
     * @param string|null $destination_country_code Detected country code of destination.
     *
     * @return self
     */
    public function setDestinationCountryCode($destination_country_code)
    {
        if (is_null($destination_country_code)) {
            array_push($this->openAPINullablesSetToNull, 'destination_country_code');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('destination_country_code', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['destination_country_code'] = $destination_country_code;

        return $this;
    }

    /**
     * Gets delivery
     *
     * @return \Ship24\TrackingApi\Model\ShipmentDelivery|null
     */
    public function getDelivery()
    {
        return $this->container['delivery'];
    }

    /**
     * Sets delivery
     *
     * @param \Ship24\TrackingApi\Model\ShipmentDelivery|null $delivery delivery
     *
     * @return self
     */
    public function setDelivery($delivery)
    {
        if (is_null($delivery)) {
            throw new \InvalidArgumentException('non-nullable delivery cannot be null');
        }
        $this->container['delivery'] = $delivery;

        return $this;
    }

    /**
     * Gets tracking_numbers
     *
     * @return \Ship24\TrackingApi\Model\ShipmentTrackingNumbersInner[]|null
     */
    public function getTrackingNumbers()
    {
        return $this->container['tracking_numbers'];
    }

    /**
     * Sets tracking_numbers
     *
     * @param \Ship24\TrackingApi\Model\ShipmentTrackingNumbersInner[]|null $tracking_numbers List of tracking numbers linked to the shipment.
     *
     * @return self
     */
    public function setTrackingNumbers($tracking_numbers)
    {
        if (is_null($tracking_numbers)) {
            throw new \InvalidArgumentException('non-nullable tracking_numbers cannot be null');
        }
        $this->container['tracking_numbers'] = $tracking_numbers;

        return $this;
    }

    /**
     * Gets recipient
     *
     * @return \Ship24\TrackingApi\Model\ShipmentRecipient|null
     */
    public function getRecipient()
    {
        return $this->container['recipient'];
    }

    /**
     * Sets recipient
     *
     * @param \Ship24\TrackingApi\Model\ShipmentRecipient|null $recipient recipient
     *
     * @return self
     */
    public function setRecipient($recipient)
    {
        if (is_null($recipient)) {
            throw new \InvalidArgumentException('non-nullable recipient cannot be null');
        }
        $this->container['recipient'] = $recipient;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


